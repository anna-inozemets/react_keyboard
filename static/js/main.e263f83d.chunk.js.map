{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","pressedKeyHadler","event","key","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAG,iKAiBZ,OAjBY,oCACdC,MAAQ,CACNC,WAAY,IACZ,EAUFC,iBAAmB,SAACC,GAClB,IAAQC,EAAQD,EAARC,IAER,EAAKC,SAAS,CAAEJ,WAAYG,GAC9B,EAAC,EAcA,OAdA,8CAZD,WACEE,SAASC,iBAAiB,QAASC,KAAKN,iBAC1C,GAAC,kCAED,WACEI,SAASG,oBAAoB,QAASD,KAAKN,iBAC7C,GAAC,oBAQD,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAK,SAClB,mBAAGA,UAAU,eAAc,SACxBT,EAAU,mCACqBA,EAAU,KACtC,6BAIZ,KAAC,EA/Ba,CAASU,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAG,IACJR,SAASS,eAAe,Q","file":"static/js/main.e263f83d.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.pressedKeyHadler);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.pressedKeyHadler);\n  }\n\n  pressedKeyHadler = (event: KeyboardEvent) => {\n    const { key } = event;\n\n    this.setState({ pressedKey: key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey\n            ? `The last pressed key is [${pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}